// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TurboAz.Entitities;

namespace TurboAz.Migrations
{
    [DbContext(typeof(TurboAzContext))]
    [Migration("20201128134807_New2")]
    partial class New2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TurboAz.Entitities.CAR_BRAND", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BRAND_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BRAND_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CAR_BRAND");
                });

            modelBuilder.Entity("TurboAz.Entitities.CAR_MODEL", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BRAND_ID")
                        .HasColumnType("int");

                    b.Property<string>("MODEL_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MODEL_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("BRAND_ID");

                    b.ToTable("CAR_MODEL");
                });

            modelBuilder.Entity("TurboAz.Entitities.GENERAL_INFO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TYPE_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TYPE_ID");

                    b.ToTable("GENERAL_INFO");
                });

            modelBuilder.Entity("TurboAz.Entitities.GENERAL_TYPE", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NAME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("GENERAL_TYPE");
                });

            modelBuilder.Entity("TurboAz.Entitities.TB_ADS", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ABS")
                        .HasColumnType("bit");

                    b.Property<bool>("ALLOY_WHEELS")
                        .HasColumnType("bit");

                    b.Property<bool>("Barter")
                        .HasColumnType("bit");

                    b.Property<int>("Body_Type_ID")
                        .HasColumnType("int");

                    b.Property<int>("Brand_ID")
                        .HasColumnType("int");

                    b.Property<bool>("CENTRAL_CLOSURE")
                        .HasColumnType("bit");

                    b.Property<int>("CITY_ID")
                        .HasColumnType("int");

                    b.Property<bool>("CONDITIONERS")
                        .HasColumnType("bit");

                    b.Property<int>("Color_ID")
                        .HasColumnType("int");

                    b.Property<bool>("Credit")
                        .HasColumnType("bit");

                    b.Property<int>("Currency_ID")
                        .HasColumnType("int");

                    b.Property<string>("EMAIL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Engine_Capacity_ID")
                        .HasColumnType("int");

                    b.Property<int>("Engine_Power")
                        .HasColumnType("int");

                    b.Property<int>("Fuel_Type_ID")
                        .HasColumnType("int");

                    b.Property<int>("Gearbox_ID")
                        .HasColumnType("int");

                    b.Property<bool>("LEATHER_SALON")
                        .HasColumnType("bit");

                    b.Property<bool>("LUKE")
                        .HasColumnType("bit");

                    b.Property<int>("Model_ID")
                        .HasColumnType("int");

                    b.Property<string>("NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NOTE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PARKING_RADAR")
                        .HasColumnType("bit");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<bool>("RAIN_SENSOR")
                        .HasColumnType("bit");

                    b.Property<bool>("REAR_VIEW_CAMERA")
                        .HasColumnType("bit");

                    b.Property<bool>("SEAT_HEATING")
                        .HasColumnType("bit");

                    b.Property<bool>("SEAT_VENTILATION")
                        .HasColumnType("bit");

                    b.Property<bool>("SIDE_CURTAINS")
                        .HasColumnType("bit");

                    b.Property<int>("Transmission_ID")
                        .HasColumnType("int");

                    b.Property<int>("Walk")
                        .HasColumnType("int");

                    b.Property<bool>("XENON_LAMPS")
                        .HasColumnType("bit");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Body_Type_ID");

                    b.HasIndex("Brand_ID");

                    b.HasIndex("CITY_ID");

                    b.HasIndex("Color_ID");

                    b.HasIndex("Fuel_Type_ID");

                    b.HasIndex("Gearbox_ID");

                    b.HasIndex("Model_ID");

                    b.HasIndex("Transmission_ID");

                    b.ToTable("TB_ADS");
                });

            modelBuilder.Entity("TurboAz.Entitities.TB_ADS_IMAGE", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ADS_ID")
                        .HasColumnType("int");

                    b.Property<int>("CAR_IMAGE")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ADS_ID");

                    b.ToTable("TB_ADS_IMAGE");
                });

            modelBuilder.Entity("TurboAz.Entitities.CAR_MODEL", b =>
                {
                    b.HasOne("TurboAz.Entitities.CAR_BRAND", "CAR_BRAND")
                        .WithMany("CAR_MODEL")
                        .HasForeignKey("BRAND_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TurboAz.Entitities.GENERAL_INFO", b =>
                {
                    b.HasOne("TurboAz.Entitities.GENERAL_TYPE", "GENERAL_TYPE")
                        .WithMany("GENERAL_INFO")
                        .HasForeignKey("TYPE_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TurboAz.Entitities.TB_ADS", b =>
                {
                    b.HasOne("TurboAz.Entitities.GENERAL_INFO", "GI_BanType")
                        .WithMany("TA_BanType")
                        .HasForeignKey("Body_Type_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurboAz.Entitities.CAR_BRAND", "CAR_BRAND")
                        .WithMany("TB_ADS")
                        .HasForeignKey("Brand_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurboAz.Entitities.GENERAL_INFO", "GI_City")
                        .WithMany("TA_City")
                        .HasForeignKey("CITY_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurboAz.Entitities.GENERAL_INFO", "GI_Color")
                        .WithMany("TA_Color")
                        .HasForeignKey("Color_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurboAz.Entitities.GENERAL_INFO", "GI_FuelType")
                        .WithMany("TA_FuelType")
                        .HasForeignKey("Fuel_Type_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurboAz.Entitities.GENERAL_INFO", "GI_Gearbox")
                        .WithMany("TA_Gearbox")
                        .HasForeignKey("Gearbox_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurboAz.Entitities.CAR_MODEL", "CAR_MODEL")
                        .WithMany("TB_ADS")
                        .HasForeignKey("Model_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurboAz.Entitities.GENERAL_INFO", "GI_Transmission")
                        .WithMany("TA_Transmission")
                        .HasForeignKey("Transmission_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TurboAz.Entitities.TB_ADS_IMAGE", b =>
                {
                    b.HasOne("TurboAz.Entitities.TB_ADS", "TB_ADS")
                        .WithMany("TB_ADS_IMAGE")
                        .HasForeignKey("ADS_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
